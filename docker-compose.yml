version: '3.9'

name: asteroid-nifi

services:
  asteroid-flask:
    container_name: asteroid-flask
    build:
      context: ./asteroid-flask
      dockerfile: Dockerfile
    ports:
      - '9000:9000'
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DB=asteroid
    depends_on:
      - mongodb
    restart: unless-stopped

  asteroid-sb:
    container_name: asteroid-sb
    build:
      context: ./asteroid-springboot
      dockerfile: Dockerfile
    ports:
      - '9001:8080'
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_ASTEROID_USER=${POSTGRES_ASTEROID_USER}
      - POSTGRES_ASTEROID_PASSWORD=${POSTGRES_ASTEROID_PASSWORD}
    depends_on:
      - postgres
    restart: unless-stopped

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.3.2
    ports:
      - '9092:9092'
      - '9093:9093'
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - kafka_data:/bitnami
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTIZED_PORT=9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      # - KAFKA_ZOOKEEPER_USER=kafka
      # - KAFKA_ZOOKEEPER_PASSWORD=password
    depends_on:
      - zookeeper
    restart: unless-stopped

  # mock-nasa:
  #   container_name: mock-nasa
  #   build:
  #     context: ./mock-nasa
  #     dockerfile: Dockerfile
  #   ports:
  #     - '9050:9050'
  #   volumes:
  #     - /etc/timezone:/etc/timezone:ro
  #     - /etc/localtime:/etc/localtime:ro
  #   restart: unless-stopped

  mongodb:
    container_name: mongodb
    image: mongo:5.0.15
    ports:
      - '27017:27017'
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./mongodb/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=asteroid
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_ROOT_PASSWORD}
      - MONGO_USER=${MONGODB_USERNAME}
      - MONGO_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_DB=asteroid
    restart: unless-stopped

  # nifi:
  #   container_name: nifi
  #   image: apache/nifi:1.20.0
  #   ports:
  #     - '8250:8080'
  #   volumes:
  #     - /etc/timezone:/etc/timezone:ro
  #     - /etc/localtime:/etc/localtime:ro
  #     - '' # TODO:
  #   environment:
  #     NIFI_WEB_HTTP_POST: 8080
  #     NIFI_WEB_HTTP_HOST: 0.0.0.0
  #   depends_on:
  #     - postgres
  #   restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres:15.2
    ports:
      - '5432:5432'
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-postgres.sh:/docker-entrypoint-initdb.d/init.sh:ro
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_ASTEROID_USER=${POSTGRES_ASTEROID_USER}
      - POSTGRES_ASTEROID_PASSWORD=${POSTGRES_ASTEROID_PASSWORD}
    restart: unless-stopped

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.7.1
    ports:
      - '2181:2181'
      # - '8251:8080' # admin
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - 'zookeeper_data:/bitnami/zookeeper'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      # - ZOO_ADMIN_SERVER_PORT=8080
      # - ZOO_ENABLE_ADMIN_SERVER=yes
      # - ZOO_CLIENT_USER=
      # - ZOO_CLIENT_PASSWORD=
      - ZOO_PORT_NUMBER=2181
    restart: unless-stopped

volumes:
  kafka_data:
  mongodb_data:
  postgres_data:
  zookeeper_data:
