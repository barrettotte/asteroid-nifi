version: '3.9'

name: asteroid-nifi

services:
  kafka:
    container_name: kafka
    image: bitnami/kafka:3.3.2
    ports:
      - '9092:9092'
      - '9093:9093'
    volumes:
      - kafka_data:/bitnami
    environment:
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTIZED_PORT: 9092
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ADVERTISED_LISTENERS: 'CLIENT://kafka:9092,EXTERNAL://localhost:9093'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_CFG_LISTENERS: 'CLIENT://:9092,EXTERNAL://:9093'
      KAFKA_CFG_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # KAFKA_ZOOKEEPER_USER: kafka
      # KAFKA_ZOOKEEPER_PASSWORD: password
    depends_on:
      - zookeeper
    restart: unless-stopped

  # kafka-ui:
  #   container_name: kafka-ui
  #   image: provectuslabs/kafka-ui:acfe7a4afcce8da9d111d8922a6cdbb311e53450
  #   ports:
  #     - '8250:8080'
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=local
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  #   depends_on:
  #     - kafka
  #     - zookeeper
  #   restart: unless-stopped

  mongodb:
    container_name: mongodb
    image: mongo:5.0.15
    ports:
      - '27017:27017'
    volumes:
      - ./mongodb/init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=asteroid
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    restart: unless-stopped

  # nifi:
  #   container_name: nifi
  #   image: apache/nifi:1.20.0
  #   ports:
  #     - '8250:8080'
  #   volumes:
  #     - '' # TODO:
  #   environment:
  #     NIFI_WEB_HTTP_POST: 8080
  #     NIFI_WEB_HTTP_HOST: 0.0.0.0
  #   depends_on:
  #     - postgres
  #   restart: unless-stopped

  postgres:
    container_name: postgres
    image: postgres:15.2
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: unless-stopped

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.7.1
    ports:
      - '2181:2181'
      # - '8251:8080' # admin
    volumes:
      - 'zookeeper_data:/bitnami/zookeeper'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      # - ZOO_ADMIN_SERVER_PORT=8080
      # - ZOO_ENABLE_ADMIN_SERVER=yes
      # - ZOO_CLIENT_USER=
      # - ZOO_CLIENT_PASSWORD=
      - ZOO_PORT_NUMBER=2181
    restart: unless-stopped

volumes:
  kafka_data:
  mongodb_data:
  postgres_data:
  zookeeper_data:
